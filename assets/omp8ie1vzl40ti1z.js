import{b4 as F,aD as P,aI as h,aF as l,aU as E,b as i,dP as R,ak as v,dQ as b,bg as k,c as T}from"./citrwydz0bgriwlc.js";import{n0 as D,dH as G,J as I,dq as K,aX as S,bQ as N,gN as Q,gz as H,im as C,iv as W}from"./krbmwir12ubt4od1.js";import{d as j,o as A,u as d,r as g,j as m,i as O,M as U,a6 as z,a5 as J}from"./b8ijctzpgh0s7wpx.js";var y,x;function X(){if(x)return y;x=1;var s=F(),e=D();function t(a,r){return a&&a.length?e(a,s(r,2)):0}return y=t,y}var Z=X();const f=j(Z);function ce(s){const e=L(s?.output_items);return{filesModified:f(e,t=>t.files_modified??0),linesAdded:f(e,t=>t.lines_added??0),linesRemoved:f(e,t=>t.lines_removed??0)}}function L(s){return s?s.map(e=>{switch(e.type){case"output_diff":return e;case"pr":return e.output_diff;default:return null}}).filter(e=>e!=null):[]}const _=P()((s,e)=>({environmentId:h.getItem(l.LastEnvironment),branch:null,manuallyAddedBranches:[],promptDraft:h.getItem(l.PromptDraft)??"",tasksFilter:"current",taskTurnMap:{},showReactQueryDevtools:!1,lastClickedChangelogDate:h.getItem(l.WhamChangelogClickedDate)??null,pendingTaskIds:{},lastViewedTaskId:null,_fetchedRateLimit:null,_forcedRateLimit:function(){return null}(),setShowReactQueryDevtools:t=>{h.setItem(l.ReactQueryDevtoolsVisible,t),s({showReactQueryDevtools:t})},setLastClickedChangelogDate:t=>{h.setItem(l.WhamChangelogClickedDate,t),s({lastClickedChangelogDate:t})},setPromptDraft:t=>{h.setItem(l.PromptDraft,t),s({promptDraft:t})},setEnvironmentId:t=>{t==null?h.removeItem(l.LastEnvironment):h.setItem(l.LastEnvironment,t),s({environmentId:t})},setBranch:t=>s({branch:t}),addManuallyAddedBranch:t=>s(a=>a.manuallyAddedBranches.includes(t)?{}:{manuallyAddedBranches:[t,...a.manuallyAddedBranches]}),setTasksFilter:t=>s({tasksFilter:t}),setLastViewedTaskId:t=>s({lastViewedTaskId:t}),addTurnToTaskMap:(t,a)=>{s(r=>{const n=r.taskTurnMap[t],o=n?{...n}:{};return o[a.id]=a,{taskTurnMap:{...r.taskTurnMap,[t]:o}}})},getTurnsForTask:t=>{const a=e().taskTurnMap[t]??[];return Object.values(a).sort((r,n)=>r.created_at-n.created_at)},addPendingTaskId:t=>{const a={...e().pendingTaskIds};a[t]=t,s({pendingTaskIds:a})},removePendingTaskId:t=>{const a={...e().pendingTaskIds};delete a[t],s({pendingTaskIds:a})},removePendingTaskByTaskId:t=>{const a=e().pendingTaskIds,[r]=Object.entries(a).find(([n,o])=>o===t)??[];if(r){const n={...a};delete n[r],s({pendingTaskIds:n})}},assignPendingTaskToFinalTask:(t,a)=>s(r=>({pendingTaskIds:{...r.pendingTaskIds,[t]:a}})),getRateLimit:()=>e()._fetchedRateLimit,setRateLimit:t=>s({_fetchedRateLimit:t}),forceRateLimit:t=>{}}));function de(s,e,t,a){switch(s.type){case"repo_not_accessible":a.danger(t.formatMessage({id:"wham.whamComposer.repoNotAccessible",defaultMessage:"Canâ€™t access GitHub repository. Verify your repository access on GitHub, or reconnect your GitHub account in Codex Settings."}),{id:e,duration:10,hasCloseButton:!0});return;case"missing_github_connector_link":a.danger(t.formatMessage({id:"wham.whamComposer.missingGithubConnectorLink",defaultMessage:"No GitHub connection. Please reconnect your GitHub account in Codex Settings."}),{id:e,duration:10,hasCloseButton:!0});return;case"non_terminal_turn":a.danger(t.formatMessage({id:"wham.whamComposer.nonTerminalTurn",defaultMessage:"Task already has a running turn"}),{id:e,duration:10,hasCloseButton:!0});return;case"repo_not_initialized":a.danger(t.formatMessage({id:"wham.whamComposer.repoNotInitialized",defaultMessage:"GitHub Repository must be initialized to be used within Codex"}),{id:e,duration:10,hasCloseButton:!0});return;case"branch_creation_not_allowed":a.danger(t.formatMessage({id:"wham.whamComposer.branchCreationNotAllowed",defaultMessage:"Branch creation unauthorized for this repository. Please check your GitHub permissions."}));return;case"pull_request_not_allowed":a.danger(t.formatMessage({id:"wham.whamComposer.pullRequestNotAllowed",defaultMessage:"Repository does not allow pull requests from Codex. Please check your GitHub permissions."}));return;case"verified_commits_required":a.danger(t.formatMessage({id:"wham.whamComposer.verifiedCommitsRequired",defaultMessage:"Codex does not currently support PRs in repositories that require verified commits"}));return;case"binary_files_not_supported":a.danger(t.formatMessage({id:"wham.whamComposer.binaryFilesNotSupported",defaultMessage:"Binary files are not supported"}),{id:e,duration:10,hasCloseButton:!0});return;case"commit_pattern_required":a.danger(t.formatMessage({id:"wham.whamComposer.commitPatternRequired",defaultMessage:"Commit message must match a given regex pattern"}),{id:e,duration:10,hasCloseButton:!0});return;case"pull_request_updated_outside_of_codex":a.danger(t.formatMessage({id:"wham.whamComposer.pullRequestUpdatedOutsideOfCodex",defaultMessage:"Codex does not currently support updating PRs that are updated outside of Codex. For now, please create a new PR."}),{id:e,duration:10,hasCloseButton:!0});return;case"branch_no_longer_exists":a.danger(t.formatMessage({id:"wham.whamComposer.branchNoLongerExists",defaultMessage:"Existing PR branch appears to no longer exist. Please create a new PR."}),{id:e,duration:10,hasCloseButton:!0});return;case"pull_request_not_found_on_task":a.danger(t.formatMessage({id:"wham.whamComposer.pullRequestNotFoundOnTask",defaultMessage:"Pull request not found for task"}),{id:e,duration:10,hasCloseButton:!0});return;default:return null}}class Y extends E{type;payload;constructor(e,t,a){super(e.message,t,a),this.type=e.type,this.payload=e}}function $(s){const e=s.detail;if(e&&typeof e.type=="string"&&typeof e.message=="string"){const t={type:e.type,message:e.message};throw new Y(t,s.status,{})}throw s}class c{static async _wrapWhamRequest(e){try{return await e()}catch(t){throw t instanceof E&&$(t),t}}static getTasks(e=10,t=null,a="current"){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks",{parameters:{query:{limit:e,cursor:t,task_filter:a}}}))}static getTasksForList(e=10,t=null,a="current"){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/list",{parameters:{query:{limit:e,cursor:t,task_filter:a}}}))}static getTaskDetails(e){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/{task_id}",{parameters:{path:{task_id:e}}}))}static getTaskTurnPR(e,t){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/{task_id}/turns/{turn_id}/pr",{parameters:{path:{task_id:e,turn_id:t}}}))}static getUserHandle(){return this._wrapWhamRequest(()=>i.safeGet("/wham/task_suggestions/github/user_handle",{}))}static getTaskTurn(e,t){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/{task_id}/turns/{turn_id}",{parameters:{path:{task_id:e,turn_id:t}}}))}static getGithubInstallations(){return this._wrapWhamRequest(()=>i.safeGet("/wham/github/installations",{}))}static feedback({thumbRating:e,text:t,taskId:a,turnId:r,shareUrl:n,pullRequestUrl:o,category:u}){return this._wrapWhamRequest(()=>i.safePost("/wham/feedback",{requestBody:{thumb_rating:e,text:t,conversation_id:null,message_id:null,task_id:a,turn_id:r,share_url:n,pull_request_url:o,category:u}}))}static archiveTask(e){return this._wrapWhamRequest(()=>i.safePost("/wham/tasks/{task_id}/archive",{parameters:{path:{task_id:e}}}))}static recoverTask(e){return this._wrapWhamRequest(()=>i.safePost("/wham/tasks/{task_id}/recover",{parameters:{path:{task_id:e}}}))}static updatePr(e,t,a){return this._wrapWhamRequest(()=>i.safePatch("/wham/tasks/{task_id}/turns/{task_turn_id}/pr/{pr_id}",{parameters:{path:{task_id:e,task_turn_id:t,pr_id:a}}}))}static createPr(e,t,a,r){return this._wrapWhamRequest(()=>i.safePost("/wham/tasks/{task_id}/turns/{task_turn_id}/pr",{parameters:{path:{task_id:e,task_turn_id:t}},requestBody:{mode:a,add_codex_tag:r}}))}static getRepositoriesByInstallationId(e,t,a){return this._wrapWhamRequest(()=>i.safeGet("/wham/github/repositories/v2/{installation_id}",{parameters:{path:{installation_id:e},query:{page:t,per_page:a}}}))}static getRepository(e){return this._wrapWhamRequest(()=>i.safeGet("/wham/github/repositories/{repo_id}",{parameters:{path:{repo_id:e}}}))}static searchBranchesByRepository(e,t,a=10,r=null){return this._wrapWhamRequest(()=>i.safeGet("/wham/github/branches/{repo_id}/search",{parameters:{path:{repo_id:e},query:{query:t,page_size:a,cursor:r}}}))}static getEnvironment(e){return this._wrapWhamRequest(()=>i.safeGet("/wham/environments/{environment_id}",{parameters:{path:{environment_id:e}}}))}static getEnvironmentWithCreatorAndMachine(e){return this._wrapWhamRequest(()=>i.safeGet("/wham/environments/{environment_id}/with-creator-and-machine",{parameters:{path:{environment_id:e}}}))}static getEnvironmentWithCreators(e=10,t=null,a=!1){return this._wrapWhamRequest(()=>i.safeGet("/wham/environments/with-creators",{parameters:{query:{limit:e,cursor:t,enforce_repo_access:a}}}))}static updateEnvironment(e,t){return this._wrapWhamRequest(()=>i.safePatch("/wham/environments/{environment_id}",{parameters:{path:{environment_id:e}},requestBody:t}))}static deleteEnvironment(e){return this._wrapWhamRequest(()=>i.safeDelete("/wham/environments/{environment_id}",{parameters:{path:{environment_id:e}}}))}static getEnvironments(){return this._wrapWhamRequest(()=>i.safeGet("/wham/environments",{}))}static getMachines(){return this._wrapWhamRequest(()=>i.safeGet("/wham/machines",{}))}static createEnvironment(e){const t=e.envVars.reduce((r,n)=>(r[n.key]=n.value,r),{}),a=e.secrets.reduce((r,n)=>(r[n.key]=n.value,r),{});return this._wrapWhamRequest(()=>i.safePost("/wham/environments",{requestBody:{label:e.label,machine_id:e.machine,repos:[e.repositoryId],description:e.description,setup:e.setupCommands,workspace_dir:e.workspaceDirectory,agent_network_access:e.agentNetworkAccess,share_settings:e.share_settings,env_vars:t,secrets:a}}))}static runEnvironmentTestCommand(e){return this._wrapWhamRequest(()=>i.safePost("/wham/environments/test/{test_session_id}/command",{parameters:{path:{test_session_id:e.testSessionId}},requestBody:{command:e.command}}))}static getUserPreferences(){return this._wrapWhamRequest(()=>i.safeGet("/wham/settings/user",{}))}static getUserPreferencesConfig(){return this._wrapWhamRequest(()=>i.safeGet("/wham/settings/configs/user-preferences",{}))}static updateUserPreferences(e){return this._wrapWhamRequest(()=>i.safePatch("/wham/settings/user",{requestBody:{branch_format:e.branchFormat,git_diff_mode:e.diffView,custom_instructions:e.customInstructions}}))}static getTurns(e){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/{task_id}/turns",{parameters:{path:{task_id:e}}}))}static getTurnLogs(e,t){return this._wrapWhamRequest(()=>i.safeGet("/wham/tasks/{task_id}/turns/{turn_id}/logs",{parameters:{path:{task_id:e,turn_id:t}}}))}static async createNewTask(e,t,a,r=!1,n){const o=await R("codex_create_task_turn").catch(p=>{v.addError(p)}),u=b(null,null,null,o);return this._wrapWhamRequest(()=>i.safePost("/wham/tasks",{requestBody:{new_task:{environment_id:e,branch:t,run_environment_in_qa_mode:r},...n?{metadata:{best_of_n:n}}:{},input_items:[{type:"message",role:"user",content:[{content_type:"text",text:a}]}]},additionalHeaders:u}))}static async createNewTaskWithEditedPrompt(e,t,a,r,n=!1){const o=await c.createNewTask(t,a,r,n);return c.archiveTask(e).catch(()=>{}),o}static async createFollowUpTask(e,t,a,r,n=!1,o=1){const u=[{type:"message",role:"user",content:[{content_type:"text",text:a}]}];r.forEach(w=>{u.push({type:"comment",position:w.position,content:w.content})});const p=await R("codex_create_task_turn").catch(w=>{v.addError(w)}),B=b(null,null,null,p);return this._wrapWhamRequest(()=>i.safePost("/wham/tasks",{requestBody:{follow_up:{task_id:e,turn_id:t,run_environment_in_qa_mode:n},metadata:{best_of_n:o},input_items:u},additionalHeaders:B}))}static markTurnAsRead(e){return this._wrapWhamRequest(()=>i.safePost("/wham/tasks/{task_id}/mark_read",{parameters:{path:{task_id:e}}}))}static forkSharedTask(e){return this._wrapWhamRequest(()=>i.safePost("/wham/tasks/{task_id}/fork",{parameters:{path:{task_id:e}}}))}static getRateLimit(){return i.safeGet("/wham/tasks/rate_limit")}}const me=(s,e,t,a)=>({queryKey:["wham","task",s,e],staleTime:0,enabled:!!s&&!!e,queryFn:async()=>(t.invalidateQueries({queryKey:["wham","tasks"]}),await c.getTaskTurn(s??"",e??"").then(r=>(t.setQueryData(["wham","tasks"],n=>te(n,r)),r))),...a||{}}),V=s=>({queryKey:["wham","task",s],staleTime:0,enabled:!!s,queryFn:async()=>await c.getTaskDetails(s??"")}),he=s=>{const e=V(s);return d(e)},ee=19;function le({enabled:s=!0,refetchOnMount:e=!1,refetchOnWindowFocus:t=!1}={}){const a=_(({tasksFilter:r})=>r);return A({queryKey:["wham","tasks",a],queryFn:async({pageParam:r})=>await c.getTasksForList(ee,r??null,a),staleTime:15,initialPageParam:null,getNextPageParam:({cursor:r})=>r,enabled:s,refetchOnMount:e,refetchOnWindowFocus:t})}function pe(){return d({queryKey:["wham","tasks","has-any"],queryFn:async()=>((await c.getTasksForList(1,null,"all")).items?.length??0)>0})}const M=s=>{const e=L(s.turn.output_items);return{id:s.task.id,title:s.task.title,has_generated_title:s.task.has_generated_title??null,updated_at:s.turn.created_at,task_status_display:{environment_label:s.turn.environment?.label,latest_turn_status_display:{turn_id:s.turn.id,turn_status:s.turn.turn_status,diff_stats:{files_modified:f(e,t=>t.files_modified??0),lines_added:f(e,t=>t.lines_added??0),lines_removed:f(e,t=>t.lines_removed??0)}}},archived:s.task.archived,has_unread_turn:!!s.task.has_unread_turn}};function te(s,e){const t=e.task.id;return e.task.current_turn_id!==e.turn.id?s:s?k(s,r=>{let n=!1;for(const o of r.pages){const u=o.items.findIndex(p=>p.id===t);if(u!==-1){o.items[u]=M(e),n=!0;break}}n||r.pages[0].items.push(M(e))}):{pageParams:[null],pages:[{items:[{task:e.task,turn:e.turn}]}]}}function fe({retry:s=0}={}){return d({queryKey:["wham","environments"],queryFn:()=>c.getEnvironments(),retry:s})}function _e({pageSize:s=20,retry:e=0,enforceRepoAccess:t=!1}={}){return A({queryKey:["wham","environments","with-creators"],initialPageParam:null,queryFn:({pageParam:a})=>c.getEnvironmentWithCreators(s,a,t),getNextPageParam:a=>a.cursor??null,retry:e})}function ge(){return d({queryKey:["wham","githubInstallations"],queryFn:()=>c.getGithubInstallations(),staleTime:0,refetchOnWindowFocus:!0,refetchOnMount:!0})}function we(s,e,t){s.setQueryData(["wham","environments"],a=>a?[e,...a]:[e]),s.setQueryData(["wham","environments","with-creators"],a=>{if(!a)return a;const r={...e,creator:t};return k(a,n=>{n.pages.length>0&&n.pages[0].items.unshift(r)})})}function ke(s,e){s.setQueryData(["wham","environments"],t=>t?.filter(a=>a.id!==e)),s.setQueryData(["wham","environments","with-creators"],t=>t&&k(t,a=>{a.pages.forEach(r=>{r.items=r.items.filter(n=>n.id!==e)})}))}function ye(s,e,t){s.setQueryData(["wham","environments"],a=>a?.map(r=>r.id===e?t:r)),s.setQueryData(["wham","environments","with-creators"],a=>a&&k(a,r=>{r.pages.forEach(n=>{n.items=n.items.map(o=>o.id===e?{...o,...t}:o)})})),s.setQueryData(["environments",e,"withCreatorAndMachine"],a=>a?{...a,...t}:void 0)}function ve(s){return d({queryKey:["environments",s,"withCreatorAndMachine"],queryFn:()=>c.getEnvironmentWithCreatorAndMachine(s)})}function Te(){return d({queryKey:["wham","userPreferences"],queryFn:()=>c.getUserPreferences()})}function qe(){return d({queryKey:["wham","userPreferencesConfig"],queryFn:()=>c.getUserPreferencesConfig()})}function Re(s,e){return Promise.all([s.invalidateQueries({queryKey:["wham","environments","with-creators"]}),s.invalidateQueries({queryKey:["wham","environments"]}),e&&s.invalidateQueries({queryKey:["environments",e]}),e&&s.invalidateQueries({queryKey:["environments",e,"withCreatorAndMachine"]})])}function be(s){return s.invalidateQueries({queryKey:["wham","userPreferences"]})}function Ce(s){const e=_(t=>t.addTurnToTaskMap);return d({queryKey:["wham","task",s,"turns"],queryFn:async()=>{const t=await c.getTurns(s??"");return Object.values(t.turn_mapping).forEach(a=>{e(s??"",a.turn)}),t},enabled:!!s})}function We(s,e){return d({queryKey:["wham","task",s,"turns",e,"logs"],queryFn:()=>c.getTurnLogs(s??"",e??""),enabled:!!s&&!!e})}function ae({refetchOnWindowFocus:s=!1,refetchInterval:e}={}){return d({queryKey:["wham","rateLimit"],queryFn:()=>c.getRateLimit(),staleTime:0,refetchOnWindowFocus:s,refetchInterval:e})}const q=P(s=>({actions:[],addActionsActions:e=>s(t=>({actions:G([...t.actions,...e],a=>a.key)})),removeActionsActions:e=>{const t=e.map(a=>a.key);return s(a=>({actions:a.actions.filter(r=>!t.includes(r.key))}))}})),se=s=>I(s,e=>{v.addAction("wham_keyboard_shortcut",{keyboardActionKey:e.key})},{enabled:!0});function xe(){return q(s=>s.actions)}function Me(s=[]){const e=q(a=>a.addActionsActions),t=q(a=>a.removeActionsActions);g.useEffect(()=>(e(s),()=>t(s)),[s,e,t]),se(s)}function Pe(){const s=_(n=>n.getRateLimit()),e=_(n=>n.setRateLimit),t=_(n=>!!n._forcedRateLimit),a=s&&s.remaining<=5,{data:r}=ae({refetchInterval:a?6e4:void 0,refetchOnWindowFocus:!0});return g.useEffect(()=>{r&&e(r)},[r,e]),!s||!a?null:m.jsx(re,{remaining:s.remaining,resetsAfterText:s.resets_after_text,hasForcedRateLimit:t})}function re({remaining:s,resetsAfterText:e,hasForcedRateLimit:t=!1}){const a=O(),r=K(),[n,o]=g.useState(!1);return m.jsx(S,{open:r?n:void 0,onOpenChange:o,label:a.formatMessage({id:"BKAKLB",defaultMessage:"More available {resetsAfterText}"},{resetsAfterText:e}),children:m.jsxs("div",{className:T("inline-flex items-center gap-1.5 rounded-full px-3 py-2 text-sm font-medium",s===0?"bg-token-text-status-error/15 text-token-text-status-error":"bg-token-text-status-warning/15 text-token-text-status-warning"),onClick:r?()=>o(u=>!u):void 0,children:[m.jsx(N,{className:"icon-md"}),r?s:m.jsx(U,{id:"e7gj6g",defaultMessage:"{remaining, plural, =0 {No tasks left} one {One task left} other {# tasks left}}",values:{remaining:s}}),!1]})})}function ne(s,e){const t=a=>{e.current?.contains(a.target)||a.target instanceof HTMLButtonElement&&a.target.dataset.reasoningPopoverAction||s(a)};return document.addEventListener("click",t),()=>{document.removeEventListener("click",t)}}const Ee=({children:s,sideOffset:e=-35,isOpen:t,closePopover:a,popoverContentRef:r,...n})=>{const o=Q();return g.useEffect(()=>{if(t)return ne(a,r)},[t,r,a]),g.useEffect(()=>{if(!t)return;const u=p=>{p.key==="Escape"&&a()};return document.addEventListener("keydown",u,{capture:!0,passive:!0}),()=>document.removeEventListener("keydown",u,{capture:!0})},[t,a]),m.jsx(H,{forceMount:!0,asChild:!0,align:"center",sideOffset:e,onOpenAutoFocus:u=>{u.preventDefault()},...n,children:m.jsx("div",{ref:r,className:T(!t&&"pointer-events-none","z-20"),children:m.jsx(z,{mode:"sync",children:t&&m.jsx(J.div,{className:T("border-token-border-light origin-radix-popover dark:bg-token-main-surface-secondary flex overflow-clip rounded-2xl border bg-white shadow-2xl dark:border-white/5 dark:shadow-[0px_24px_64px_rgba(0,0,0,0.32)]"),variants:{open:{scale:[.7,1],opacity:1,transition:o?C:W},closed:{opacity:0,scale:.8,transition:o?C:{...W,duration:.2}}},initial:"closed",animate:"open",exit:"closed",children:s})})})})};export{Ee as C,c as W,xe as a,ve as b,ye as c,Y as d,_ as e,le as f,me as g,he as h,Re as i,Ce as j,ge as k,fe as l,_e as m,Te as n,qe as o,we as p,be as q,ke as r,f as s,pe as t,Me as u,Pe as v,de as w,ce as x,L as y,We as z};
//# sourceMappingURL=omp8ie1vzl40ti1z.js.map
